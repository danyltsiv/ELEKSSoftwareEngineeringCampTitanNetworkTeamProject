//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApiTier.UserServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfoDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicTier.DataTranferObjects")]
    [System.SerializableAttribute()]
    public partial class UserInfoDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AboutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MidleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string About {
            get {
                return this.AboutField;
            }
            set {
                if ((object.ReferenceEquals(this.AboutField, value) != true)) {
                    this.AboutField = value;
                    this.RaisePropertyChanged("About");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MidleName {
            get {
                return this.MidleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MidleNameField, value) != true)) {
                    this.MidleNameField = value;
                    this.RaisePropertyChanged("MidleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChatDTO", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicTier.DataTranferObjects")]
    [System.SerializableAttribute()]
    public partial class ChatDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDTO", Namespace="http://schemas.datacontract.org/2004/07/WCFService.DataTranferObjects")]
    [System.SerializableAttribute()]
    public partial class AccountDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmPassword {
            get {
                return this.ConfirmPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmPasswordField, value) != true)) {
                    this.ConfirmPasswordField = value;
                    this.RaisePropertyChanged("ConfirmPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserServiceReference.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllUsers", ReplyAction="http://tempuri.org/IUserService/GetAllUsersResponse")]
        WebApiTier.UserServiceReference.UserInfoDTO[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllUsers", ReplyAction="http://tempuri.org/IUserService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<WebApiTier.UserServiceReference.UserInfoDTO[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserById", ReplyAction="http://tempuri.org/IUserService/GetUserByIdResponse")]
        WebApiTier.UserServiceReference.UserInfoDTO GetUserById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserById", ReplyAction="http://tempuri.org/IUserService/GetUserByIdResponse")]
        System.Threading.Tasks.Task<WebApiTier.UserServiceReference.UserInfoDTO> GetUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetChatsOfUser", ReplyAction="http://tempuri.org/IUserService/GetChatsOfUserResponse")]
        WebApiTier.UserServiceReference.ChatDTO[] GetChatsOfUser(WebApiTier.UserServiceReference.UserInfoDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetChatsOfUser", ReplyAction="http://tempuri.org/IUserService/GetChatsOfUserResponse")]
        System.Threading.Tasks.Task<WebApiTier.UserServiceReference.ChatDTO[]> GetChatsOfUserAsync(WebApiTier.UserServiceReference.UserInfoDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserFriends", ReplyAction="http://tempuri.org/IUserService/GetUserFriendsResponse")]
        WebApiTier.UserServiceReference.UserInfoDTO[] GetUserFriends(WebApiTier.UserServiceReference.UserInfoDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserFriends", ReplyAction="http://tempuri.org/IUserService/GetUserFriendsResponse")]
        System.Threading.Tasks.Task<WebApiTier.UserServiceReference.UserInfoDTO[]> GetUserFriendsAsync(WebApiTier.UserServiceReference.UserInfoDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetMutualFriends", ReplyAction="http://tempuri.org/IUserService/GetMutualFriendsResponse")]
        WebApiTier.UserServiceReference.UserInfoDTO[] GetMutualFriends(WebApiTier.UserServiceReference.UserInfoDTO userInfo1, WebApiTier.UserServiceReference.UserInfoDTO userInfo2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetMutualFriends", ReplyAction="http://tempuri.org/IUserService/GetMutualFriendsResponse")]
        System.Threading.Tasks.Task<WebApiTier.UserServiceReference.UserInfoDTO[]> GetMutualFriendsAsync(WebApiTier.UserServiceReference.UserInfoDTO userInfo1, WebApiTier.UserServiceReference.UserInfoDTO userInfo2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetWayBetweenUsers", ReplyAction="http://tempuri.org/IUserService/GetWayBetweenUsersResponse")]
        WebApiTier.UserServiceReference.UserInfoDTO[] GetWayBetweenUsers(WebApiTier.UserServiceReference.UserInfoDTO id1, WebApiTier.UserServiceReference.UserInfoDTO id2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetWayBetweenUsers", ReplyAction="http://tempuri.org/IUserService/GetWayBetweenUsersResponse")]
        System.Threading.Tasks.Task<WebApiTier.UserServiceReference.UserInfoDTO[]> GetWayBetweenUsersAsync(WebApiTier.UserServiceReference.UserInfoDTO id1, WebApiTier.UserServiceReference.UserInfoDTO id2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        bool UpdateUser(WebApiTier.UserServiceReference.UserInfoDTO newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(WebApiTier.UserServiceReference.UserInfoDTO newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUser", ReplyAction="http://tempuri.org/IUserService/DeleteUserResponse")]
        bool DeleteUser(WebApiTier.UserServiceReference.UserInfoDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUser", ReplyAction="http://tempuri.org/IUserService/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(WebApiTier.UserServiceReference.UserInfoDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddAccount", ReplyAction="http://tempuri.org/IUserService/AddAccountResponse")]
        bool AddAccount(WebApiTier.UserServiceReference.AccountDTO model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddAccount", ReplyAction="http://tempuri.org/IUserService/AddAccountResponse")]
        System.Threading.Tasks.Task<bool> AddAccountAsync(WebApiTier.UserServiceReference.AccountDTO model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CheckCredentials", ReplyAction="http://tempuri.org/IUserService/CheckCredentialsResponse")]
        bool CheckCredentials(WebApiTier.UserServiceReference.AccountDTO model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CheckCredentials", ReplyAction="http://tempuri.org/IUserService/CheckCredentialsResponse")]
        System.Threading.Tasks.Task<bool> CheckCredentialsAsync(WebApiTier.UserServiceReference.AccountDTO model);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : WebApiTier.UserServiceReference.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<WebApiTier.UserServiceReference.IUserService>, WebApiTier.UserServiceReference.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebApiTier.UserServiceReference.UserInfoDTO[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<WebApiTier.UserServiceReference.UserInfoDTO[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public WebApiTier.UserServiceReference.UserInfoDTO GetUserById(int id) {
            return base.Channel.GetUserById(id);
        }
        
        public System.Threading.Tasks.Task<WebApiTier.UserServiceReference.UserInfoDTO> GetUserByIdAsync(int id) {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public WebApiTier.UserServiceReference.ChatDTO[] GetChatsOfUser(WebApiTier.UserServiceReference.UserInfoDTO dto) {
            return base.Channel.GetChatsOfUser(dto);
        }
        
        public System.Threading.Tasks.Task<WebApiTier.UserServiceReference.ChatDTO[]> GetChatsOfUserAsync(WebApiTier.UserServiceReference.UserInfoDTO dto) {
            return base.Channel.GetChatsOfUserAsync(dto);
        }
        
        public WebApiTier.UserServiceReference.UserInfoDTO[] GetUserFriends(WebApiTier.UserServiceReference.UserInfoDTO dto) {
            return base.Channel.GetUserFriends(dto);
        }
        
        public System.Threading.Tasks.Task<WebApiTier.UserServiceReference.UserInfoDTO[]> GetUserFriendsAsync(WebApiTier.UserServiceReference.UserInfoDTO dto) {
            return base.Channel.GetUserFriendsAsync(dto);
        }
        
        public WebApiTier.UserServiceReference.UserInfoDTO[] GetMutualFriends(WebApiTier.UserServiceReference.UserInfoDTO userInfo1, WebApiTier.UserServiceReference.UserInfoDTO userInfo2) {
            return base.Channel.GetMutualFriends(userInfo1, userInfo2);
        }
        
        public System.Threading.Tasks.Task<WebApiTier.UserServiceReference.UserInfoDTO[]> GetMutualFriendsAsync(WebApiTier.UserServiceReference.UserInfoDTO userInfo1, WebApiTier.UserServiceReference.UserInfoDTO userInfo2) {
            return base.Channel.GetMutualFriendsAsync(userInfo1, userInfo2);
        }
        
        public WebApiTier.UserServiceReference.UserInfoDTO[] GetWayBetweenUsers(WebApiTier.UserServiceReference.UserInfoDTO id1, WebApiTier.UserServiceReference.UserInfoDTO id2) {
            return base.Channel.GetWayBetweenUsers(id1, id2);
        }
        
        public System.Threading.Tasks.Task<WebApiTier.UserServiceReference.UserInfoDTO[]> GetWayBetweenUsersAsync(WebApiTier.UserServiceReference.UserInfoDTO id1, WebApiTier.UserServiceReference.UserInfoDTO id2) {
            return base.Channel.GetWayBetweenUsersAsync(id1, id2);
        }
        
        public bool UpdateUser(WebApiTier.UserServiceReference.UserInfoDTO newUser) {
            return base.Channel.UpdateUser(newUser);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(WebApiTier.UserServiceReference.UserInfoDTO newUser) {
            return base.Channel.UpdateUserAsync(newUser);
        }
        
        public bool DeleteUser(WebApiTier.UserServiceReference.UserInfoDTO dto) {
            return base.Channel.DeleteUser(dto);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(WebApiTier.UserServiceReference.UserInfoDTO dto) {
            return base.Channel.DeleteUserAsync(dto);
        }
        
        public bool AddAccount(WebApiTier.UserServiceReference.AccountDTO model) {
            return base.Channel.AddAccount(model);
        }
        
        public System.Threading.Tasks.Task<bool> AddAccountAsync(WebApiTier.UserServiceReference.AccountDTO model) {
            return base.Channel.AddAccountAsync(model);
        }
        
        public bool CheckCredentials(WebApiTier.UserServiceReference.AccountDTO model) {
            return base.Channel.CheckCredentials(model);
        }
        
        public System.Threading.Tasks.Task<bool> CheckCredentialsAsync(WebApiTier.UserServiceReference.AccountDTO model) {
            return base.Channel.CheckCredentialsAsync(model);
        }
    }
}

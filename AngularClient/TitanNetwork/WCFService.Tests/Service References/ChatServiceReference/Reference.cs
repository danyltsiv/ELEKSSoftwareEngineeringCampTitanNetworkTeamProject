//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusinessLogicTier.Tests.ChatServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfoDTO", Namespace="http://schemas.datacontract.org/2004/07/WCFService.DataTranferObjects")]
    [System.SerializableAttribute()]
    public partial class UserInfoDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AboutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MidleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string About {
            get {
                return this.AboutField;
            }
            set {
                if ((object.ReferenceEquals(this.AboutField, value) != true)) {
                    this.AboutField = value;
                    this.RaisePropertyChanged("About");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MidleName {
            get {
                return this.MidleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MidleNameField, value) != true)) {
                    this.MidleNameField = value;
                    this.RaisePropertyChanged("MidleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageDTO", Namespace="http://schemas.datacontract.org/2004/07/WCFService.DataTranferObjects")]
    [System.SerializableAttribute()]
    public partial class MessageDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SendDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewContent {
            get {
                return this.NewContentField;
            }
            set {
                if ((object.ReferenceEquals(this.NewContentField, value) != true)) {
                    this.NewContentField = value;
                    this.RaisePropertyChanged("NewContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendDate {
            get {
                return this.SendDateField;
            }
            set {
                if ((this.SendDateField.Equals(value) != true)) {
                    this.SendDateField = value;
                    this.RaisePropertyChanged("SendDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChatDTO", Namespace="http://schemas.datacontract.org/2004/07/WCFService.DataTranferObjects")]
    [System.SerializableAttribute()]
    public partial class ChatDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChatServiceReference.IChatService")]
    public interface IChatService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/GetAllUsersFromChat", ReplyAction="http://tempuri.org/IChatService/GetAllUsersFromChatResponse")]
        BusinessLogicTier.Tests.ChatServiceReference.UserInfoDTO[] GetAllUsersFromChat(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/GetAllUsersFromChat", ReplyAction="http://tempuri.org/IChatService/GetAllUsersFromChatResponse")]
        System.Threading.Tasks.Task<BusinessLogicTier.Tests.ChatServiceReference.UserInfoDTO[]> GetAllUsersFromChatAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/GetAllMessagesFromChat", ReplyAction="http://tempuri.org/IChatService/GetAllMessagesFromChatResponse")]
        BusinessLogicTier.Tests.ChatServiceReference.MessageDTO[] GetAllMessagesFromChat(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/GetAllMessagesFromChat", ReplyAction="http://tempuri.org/IChatService/GetAllMessagesFromChatResponse")]
        System.Threading.Tasks.Task<BusinessLogicTier.Tests.ChatServiceReference.MessageDTO[]> GetAllMessagesFromChatAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/AddChat", ReplyAction="http://tempuri.org/IChatService/AddChatResponse")]
        void AddChat(BusinessLogicTier.Tests.ChatServiceReference.ChatDTO chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/AddChat", ReplyAction="http://tempuri.org/IChatService/AddChatResponse")]
        System.Threading.Tasks.Task AddChatAsync(BusinessLogicTier.Tests.ChatServiceReference.ChatDTO chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/AddUser", ReplyAction="http://tempuri.org/IChatService/AddUserResponse")]
        void AddUser(int id, BusinessLogicTier.Tests.ChatServiceReference.UserInfoDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/AddUser", ReplyAction="http://tempuri.org/IChatService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(int id, BusinessLogicTier.Tests.ChatServiceReference.UserInfoDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/AddMessage", ReplyAction="http://tempuri.org/IChatService/AddMessageResponse")]
        void AddMessage(int id, BusinessLogicTier.Tests.ChatServiceReference.MessageDTO message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/AddMessage", ReplyAction="http://tempuri.org/IChatService/AddMessageResponse")]
        System.Threading.Tasks.Task AddMessageAsync(int id, BusinessLogicTier.Tests.ChatServiceReference.MessageDTO message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/UpdateChat", ReplyAction="http://tempuri.org/IChatService/UpdateChatResponse")]
        void UpdateChat(BusinessLogicTier.Tests.ChatServiceReference.ChatDTO chat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/UpdateChat", ReplyAction="http://tempuri.org/IChatService/UpdateChatResponse")]
        System.Threading.Tasks.Task UpdateChatAsync(BusinessLogicTier.Tests.ChatServiceReference.ChatDTO chat);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServiceChannel : BusinessLogicTier.Tests.ChatServiceReference.IChatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatServiceClient : System.ServiceModel.ClientBase<BusinessLogicTier.Tests.ChatServiceReference.IChatService>, BusinessLogicTier.Tests.ChatServiceReference.IChatService {
        
        public ChatServiceClient() {
        }
        
        public ChatServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChatServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BusinessLogicTier.Tests.ChatServiceReference.UserInfoDTO[] GetAllUsersFromChat(int id) {
            return base.Channel.GetAllUsersFromChat(id);
        }
        
        public System.Threading.Tasks.Task<BusinessLogicTier.Tests.ChatServiceReference.UserInfoDTO[]> GetAllUsersFromChatAsync(int id) {
            return base.Channel.GetAllUsersFromChatAsync(id);
        }
        
        public BusinessLogicTier.Tests.ChatServiceReference.MessageDTO[] GetAllMessagesFromChat(int id) {
            return base.Channel.GetAllMessagesFromChat(id);
        }
        
        public System.Threading.Tasks.Task<BusinessLogicTier.Tests.ChatServiceReference.MessageDTO[]> GetAllMessagesFromChatAsync(int id) {
            return base.Channel.GetAllMessagesFromChatAsync(id);
        }
        
        public void AddChat(BusinessLogicTier.Tests.ChatServiceReference.ChatDTO chat) {
            base.Channel.AddChat(chat);
        }
        
        public System.Threading.Tasks.Task AddChatAsync(BusinessLogicTier.Tests.ChatServiceReference.ChatDTO chat) {
            return base.Channel.AddChatAsync(chat);
        }
        
        public void AddUser(int id, BusinessLogicTier.Tests.ChatServiceReference.UserInfoDTO user) {
            base.Channel.AddUser(id, user);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(int id, BusinessLogicTier.Tests.ChatServiceReference.UserInfoDTO user) {
            return base.Channel.AddUserAsync(id, user);
        }
        
        public void AddMessage(int id, BusinessLogicTier.Tests.ChatServiceReference.MessageDTO message) {
            base.Channel.AddMessage(id, message);
        }
        
        public System.Threading.Tasks.Task AddMessageAsync(int id, BusinessLogicTier.Tests.ChatServiceReference.MessageDTO message) {
            return base.Channel.AddMessageAsync(id, message);
        }
        
        public void UpdateChat(BusinessLogicTier.Tests.ChatServiceReference.ChatDTO chat) {
            base.Channel.UpdateChat(chat);
        }
        
        public System.Threading.Tasks.Task UpdateChatAsync(BusinessLogicTier.Tests.ChatServiceReference.ChatDTO chat) {
            return base.Channel.UpdateChatAsync(chat);
        }
    }
}
